version: '3.8'

x-common-env: &common-env
  ENV: local
  REDIS_URL: '${REDIS_URL:-redis://redis:6379}'
  REDIS_RATE_LIMIT_URL: '${REDIS_RATE_LIMIT_URL:-redis://redis:6379}'
  PLAYWRIGHT_MICROSERVICE_URL: '${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000}'
  USE_DB_AUTHENTICATION: '${USE_DB_AUTHENTICATION:-false}'
  TEST_API_KEY: '${TEST_API_KEY:-test-key}'
  LOGGING_LEVEL: '${LOGGING_LEVEL:-info}'
  OPENAI_API_KEY: '${OPENAI_API_KEY:-ollama}'
  OPENAI_BASE_URL: '${OPENAI_BASE_URL:-http://host.docker.internal:11434/v1}'
  LLM_MODEL: '${LLM_MODEL:-llama3.2}'
  SEARXNG_URL: '${SEARXNG_URL:-http://host.docker.internal:8888}'

services:
  playwright-service:
    image: 'ghcr.io/browserless/chromium:latest'
    platform: linux/arm64
    environment:
      PORT: 3000
      TIMEOUT: 60000
      CONCURRENT: 3
      QUEUED: 10
      CORS: 'true'
    cap_add:
      - SYS_ADMIN
    networks:
      - backend

  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *common-env
      HOST: 0.0.0.0
      PORT: '${INTERNAL_PORT:-3002}'
      NODE_ENV: production
      IS_API_PROCESS: 'true'
    networks:
      - backend
    depends_on:
      - redis
      - playwright-service
    ports:
      - '${PORT:-3002}:${INTERNAL_PORT:-3002}'
    command: ['supervisord', '-c', '/etc/supervisor/supervisord.conf']
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *common-env
      NODE_ENV: production
      IS_WORKER_PROCESS: 'true'
      NUM_WORKERS_PER_QUEUE: '${NUM_WORKERS_PER_QUEUE:-8}'
    networks:
      - backend
    depends_on:
      - redis
      - playwright-service
    command: ['node', 'dist/src/services/queue-worker.js']
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    image: 'redis:7-alpine'
    platform: linux/arm64
    networks:
      - backend
    command: 'redis-server --bind 0.0.0.0 --maxmemory 512mb --maxmemory-policy noeviction'
    restart: unless-stopped

networks:
  backend:
    driver: bridge
