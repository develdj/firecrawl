version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Firecrawl with integrated Playwright, nginx, and API
  firecrawl:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"       # ðŸ‘ˆ NGINX serves here! (playground UI + API proxy)
    environment:
      - NODE_ENV=production
      - PORT=3002
      - HOST=0.0.0.0
      - NUM_WORKERS_PER_QUEUE=8
      - REDIS_HOST=redis
      - REDIS_URL=redis://redis:6379
      - REDIS_RATE_LIMIT_URL=redis://redis:6379
      - USE_DB_AUTHENTICATION=false
      - PLAYWRIGHT_MICROSERVICE_URL=http://localhost:3000
      - LOGGING_LEVEL=info
      - MAX_RAM=0.95
      - MAX_CPU=0.95
      # Add your API keys here if needed
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - LLAMAPARSE_API_KEY=${LLAMAPARSE_API_KEY:-}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  bull-dashboard:
    image: deadly0/bull-board:latest
    restart: unless-stopped
    ports:
      - "3333:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    depends_on:
      - redis

volumes:
  redis_data:
